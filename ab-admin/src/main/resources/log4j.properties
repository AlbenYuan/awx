#########################################################################################
##### Global Log Level(OFF,FATAL,ERROR,WARN,INFO,DEBUG,ALL) #############
#
log4j.rootLogger=INFO,Console,File
#
# Console
#########################################################################################
#
# HEADER [PROPERTIES] configLog4j
#
# begin
#
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#
# %m 输出代码中指定的消息
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目，通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss.SSS}，输出类似：2002年10月18日 ：10：28，921
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
# %x Used to output the NDC (nested diagnostic context) associated with the thread that generated the logging event
# %X Used to output the MDC (mapped diagnostic context) associated with the thread that generated the logging event for specified key
log4j.appender.Console.layout.ConversionPattern=%d{YYYY-MM-dd HH:mm:ss.SSS} %p %t %l %m%n
#
# File
#
log4j.appender.File=org.apache.log4j.DailyRollingFileAppender
log4j.appender.File.File=${catalina.base}/logs/log4j.log
log4j.appender.File.Encoding=UTF-8
log4j.appender.File.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.File.Threshold=INFO
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=%d-[%p] [%t] [%l] - %m%n
#
# hibernate
log4j.logger.org.hibernate=INFO,Console
log4j.logger.org.hibernate.SQL=INFO
log4j.logger.org.hibernate.type=INFO
log4j.logger.org.hibernate.hql.ast.AST=INFO
log4j.logger.org.hibernate.tool.hbm2ddl=INFO
log4j.logger.org.hibernate.hql=INFO
log4j.logger.org.hibernate.cache=INFO
log4j.logger.org.hibernate.jdbc=INFO
#log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#log4j.logger.org.hibernate.type.descriptor.sql.BasicExtractor=TRACE
#log4j.logger.org.hibernate.engine.QueryParameters=TRACE
#log4j.logger.org.hibernate.engine.query.HQLQueryPlan=DEBUG
#
# hibernate
#log4j.appender.STDOUT.Threshold=trace
#log4j.category.org.hibernate.SQL=trace
#log4j.category.org.hibernate.type=trace
# end
#